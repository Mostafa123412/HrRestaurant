package com.example.hrrestaurant.ui.util

import android.annotation.SuppressLint
import android.app.NotificationManager
import android.app.PendingIntent
import android.content.Context
import android.content.Intent
import android.widget.RemoteViews
import androidx.core.app.NotificationCompat
import com.example.hrrestaurant.R
import com.example.hrrestaurant.ui.activity.main.MainActivity
import com.google.firebase.messaging.RemoteMessage.Notification

/***
 * Local notifications can appear even if the app is in the background or if it is closed. Local notifications are generated by the operating system, not the app itself. Once you schedule a local notification,
 * the operating system takes over and displays the notification at the appropriate time,
 * even if your app is not running.
 */
class OrderStateNotification(private val context: Context) {
    private val notificationManager =
        context.getSystemService(Context.NOTIFICATION_SERVICE) as NotificationManager

    private fun createPendingIntent(context: Context):PendingIntent {
        val intent = Intent(context, MainActivity::class.java)
            .addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)

        return PendingIntent
            .getActivity(context, 0, intent, PendingIntent.FLAG_IMMUTABLE)
    }
    fun showNotification(newOrderState: String) {
        val notification = NotificationCompat
            .Builder(context , ChannelID)
            .setSmallIcon(R.drawable.logo)
            .setContentTitle("New Order State")
            .setContentText(newOrderState)
//            .setContent(getRemoteView("New Order State", newOrderState))
            .setContentIntent(createPendingIntent(context))
            .build()
        notificationManager.notify(1 ,notification)
    }

    @SuppressLint("RemoteViewLayout")
    private fun getRemoteView(title: String, message: String): RemoteViews {
        val remoteViews = RemoteViews("com.example.hrrestaurant", R.layout.notification)
        remoteViews.setTextViewText(R.id.title, title)
        remoteViews.setTextViewText(R.id.message, message)
        remoteViews.setImageViewResource(R.id.mainLogo, R.drawable.logo)
        return remoteViews
    }
}